# Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.
# Пример: 6 -> да, 7 -> да, 1 -> нет

day = int(input("Введите день недели в виде числа от 1 до 7: "))
if day > 7 or day < 1:
    print("Такого дня недели нет")
elif 1 <= day <= 5:
    print("Это будний день")
else:
    print("Это выходной")

print("\n")
# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.

for x in [0, 1]:
    for y in [0, 1]:
        for z in [0, 1]:
            print(f"¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z при значениях X = {x}, Y = {y}, Z = {z} равно: "
                  f"{not (x or y or z) == (not x and not y and not z)}")

print("\n")
# Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится эта точка (или на какой оси она находится).
# Пример: x=34 y=-30 -> 4; x=2 y=4-> 1; x=-34 y=-30 -> 3

crd = list(map(int, input("enter the coordinate of the point separated by a space (X Y): ").split()))
if crd[0] > 0 and crd[1] > 0:
    print("Точка расположена в 1 четверти (северо-восток)")
elif crd[0] > 0 and crd[1] < 0:
    print("Точка расположена в 2 четверти (юго-восток)")
elif crd[0] < 0 and crd[1] < 0:
    print("Точка расположена в 3 четверти (юго-запад)")
elif crd[0] < 0 and crd[1] > 0:
    print("Точка расположена в 4 четверти (северо-запад)")
else:
    print("Точка расположена в центре оси координат")

print("\n")
# Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек в этой четверти (x и y)

crd = int(input("Enter number of quarter (1-4): "))
if crd == 1:
    print(
        "Точка расположена в 1 четверти (северо-восток), возможные значения X = от 1 до бесконечности и Y = от 1 до бесконечности")
elif crd == 2:
    print(
        "Точка расположена в 2 четверти (юго-восток), возможные значения X = от 1 до бесконечности и Y = от -1 до -бесконечности")
elif crd == 3:
    print(
        "Точка расположена в 3 четверти (юго-запад), возможные значения X = от -1 до -бесконечности и Y = от -1 до -бесконечности")
elif crd == 4:
    print(
        "Точка расположена в 4 четверти (северо-запад), возможные значения X = от -1 до -бесконечности и Y = от 1 до бесконечности")

print("\n")
# Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.
# Пример: A (3,6) B (2,1) -> 5,09; A (7,-5) B (1,-1) -> 7,21

crd1 = list(map(int, input("Enter the coordinate of the point A separated by a space (X, Y)").split()))
crd2 = list(map(int, input("Enter the coordinate of the point B separated by a space (X, Y)").split()))
print(f"Distance between point A and B one equal: {((crd2[0] - crd1[0]) ** 2 + (crd2[1] - crd1[1]) ** 2) ** 0.5:.2f}")

print("\n")
# Реализовать вывод информации о промежутке времени в зависимости от его продолжительности duration в секундах: до минуты: <s> сек; до часа: <m> мин <s> сек; до суток: <h> час <m> мин <s> сек; * в остальных случаях: <d> дн <h> час <m> мин <s> сек.
# Примеры: duration = 53  53 сек; duration = 153 2 мин 33 сек; duration = 4153 1 час 9 мин 13 сек; duration = 400153  4 дн 15 час 9 мин 13 сек


dur = int(input("Enter value of duration: "))
if dur < 60:
    print(f"{dur} сек")
elif 60 <= dur < 3600:
    print(f"{dur // 60} мин {dur % 60} сек")
elif 3600 <= dur < (3600 * 24):
    print(f"{dur // 3600} час {dur % 3600 // 60} мин {dur % 60} сек")
else:
    print(
        f"{dur // (3600 * 24)} дн {dur % (3600 * 24) // 3600} час {dur % (3600 * 24) % 3600 // 60} мин {dur % 60} сек")

print("\n")


# Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
# Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7. Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7. Внимание: использовать только арифметические операции!
# К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
# * Решить задачу под пунктом b, не создавая новый список

def sum_digit(values: int):
    tmp = 0
    while values > 0:
        tmp += values % 10
        values = values // 10
    return tmp


lst_val = [x ** 3 for x in range(1, 1001, 2)]
tmp = 0
for i in lst_val:
    if sum_digit(i) % 7 == 0:
        tmp += i
print(f"сумма цифр которых делится нацело на 7 = {tmp}")
for i in range(len(lst_val)):
    lst_val[i] += 17
tmp = 0
for i in lst_val:
    if sum_digit(i) % 7 == 0:
        tmp += i
print(f"сумма цифр которых делится нацело на 7 = {tmp}")

print("\n")
# Склонение слова
# Реализовать склонение слова «процент» во фразе «N процентов». Вывести эту фразу на экран отдельной строкой для каждого из чисел в интервале от 1 до 100:
# 1 процент
# 2 процента
# 3 процента
# 4 процента
# 5 процентов
# 6 процентов
# ...
# 100 процентов

for i in range(1, 101):
    if i == 1 or (i > 20 and i % 10 == 1):
        print(f"{i} процент")
    elif (i % 10 in [2, 3, 4]) and (i < 10 or i > 20):
        print(f"{i} процента")
    else:
        print(f"{i} процентов")
